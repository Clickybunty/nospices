Die Dokumentation dient dazu, 
den Fortschritt der Arbeit detailliert zu erfassen. 
Sie dokumentiert die Entwicklungsprozesse, 
Herausforderungen und 
deren Lösungen sowie den aktuellen Stand des Projekts. 
Sie kann genutzt werden, 
um die Schritte der Umsetzung nachvollziehbar darzustellen und 
als Orientierung für das Team zu dienen.

Hallo!
Willkommen zu NoSpieces

Team Stevan 51, Markus 24/5 und Stefan 24/5

Frontend

cd nospicesfrontend
npx create-react-app nospices
npm install axios

npm start

Backend

cd backend
npm init -y
npm install express cors
npm install nodemon
node index.js
oder
npm run dev


## Monday Week 1   ( Tag 0 )

    Projekt initialisieren und Struktur aufbauen

    Datenbank geändert auf MariaDB, aufgrund von Problemen mit der MongoDB	

    Backend und Frontend initialisiert	

## Tuesday Week 1   ( Tag 1 )

    MongoDB Setup und erste API-Verbindungen
    Zutaten Beispiel-Rezepte und IDs erstellt	
    
    Beispiel-Rezepte und Zutaten IDs erstellt
    Datenbank lokal erstellt	

## Wednesday Week 1   ( Tag 2 )
    
    Datenbank-Migration von MongoDB zu MariaDB durchgeführt
    Doku MongoDB hinzugefügt	
    
    Datenbank lokal erstellt und konfiguriert
    Datenformat-Transformation und Insert-Skripte erstellt
    
    Datenformat-Transformation und Insert-Skripte erstellt
    Frontend-Anpassungen und Tests abgeschlossen	
    
    Frontend-Anpassungen und Tests abgeschlossen
    Get Call und Frontend-Kommunikation implementiert	

## Thursday	Week 1   ( Tag 3 )

    Get Call und Frontend-Kommunikation implementiert
    
    Ausgewählte Zutaten im Frontend ausgegeben

## Friday Week 1   ( Tag 4 )

    MySQL Setup wurde zur `README.md` hinzugefügt, 
    einschließlich der Befehle für das Erstellen der Datenbank und Tabelle.
    
    Eine allgemeine Erklärung zum Importieren von Daten in die MySQL-Datenbank wurde eingefügt.
    
    Die Backend-APIs wurden erweitert, 
    um die neuen relationalen Datenstrukturen zu unterstützen. 
    
    Insbesondere wurden Endpoints für das Abrufen von Rezepten und 
    Zutaten sowie für die Manipulation der Daten in der MySQL-Datenbank implementiert.
    
    Skript zur automatischen Befüllung der Datenbank wurde angepasst.


## Monday Week 2   ( Tag 5 )

    Frontend RezepteSuchen in Components aufgeteilt.
    
    Datenbank wurde um mehrere Tabellen erweitert. 
    
    Merge mit Arbeitsbranch ist erfolgt. 
    
    Zwei Skripte zum Umwandeln der jsons wurden erstellt. 
    
    Darüber hinaus wurden Skripte geschrieben, die die Daten vorbereiten und
    zwei Skripte, die die Daten in die Datenbank hochladen. 
    
    Am Ende wurden in der bestehenden Datenbank zwei weitere Tabellen erstellt:
    Neben der Tabelle "zutaten" wurden die Tabellen "multilanguage" und "rezeptnamen" erstellt.


## Tuesday Week 2   ( Tag 6 )

    CSS wurde an die ausgelagerten Components angepasst.
    
    DropDown Menü öffnet sich mit der gesamten Liste wenn man in das Suchfeld hinein klickt. 
    Dropdown Menü schließt sich wenn man erneut hinnein klickt. 
    
    Die Sprache wird jetzt automatisch an die Browsersprache angepasst und lässt sich noch nachträglich anpassen.
    
    Namen für die App wurden ermittelt.
    5 Namen die laut erster Recharche sowohl als de als auch com verfügbar währen.
    3 Namen stehen in der engeren Auswahl. Entscheidung noch offen.
    
    Ein erster Entwurf für das Backend bzgl. der Datenbankabfrage der Rezepte und der Abfrage
    nach YouTube- und Chefkoch-Videos wurde erstellt. Dieser wird aber noch überarbeitet.


## Wednesday Week 2   ( Tag 7 )

    Die Navbar wurde mit Platzhaltern vorbereitet und 
    für die weitere Bearbeitung bereitgestellt.
    
    Der Footer wurde ebenfalls mit Platzhaltern vorbereitet und 
    zur weiteren Bearbeitung bereitgestellt.
    
    Ein einstündiger Termin mit Patrick fand statt, 
    um die Domain und 
    die Anbindung in AWS zu besprechen.
    
    Die Zutatenliste war als String unbrauchbar und 
    wurde für das Backend überarbeitet, 
    sodass jetzt die IDs übergeben werden.
    
    Die Darstellung der ausgewählten Zutaten wurde ebenfalls überarbeitet.
    
    IDs werden simuliert an das Backend übertragen.
    
    Checkboxen für die Plattformen Google, Chefkoch und YouTube wurden erfolgreich implementiert.
    
    Ein Bugfix... oder mehrere für die automatische Sprachanpassung 
    basierend auf den Browsereinstellungen wurde(n) durchgeführt.

    Die `LanguageSelector`-Komponente wurde in die Navbar neben den Login-Bereich verschoben.  

    Eine neue Datei `src/context/LanguageContext.jsx` wurde erstellt und 
    implementiert, um ein modulares Sprach-Handling zu ermöglichen.


## Thursday Week 2   ( Tag 8 )

    Das Menü in der Navbar wurde zentriert. 
    Die Landesfahne sowie der Login-Bereich wurden oben rechts, 
    über dem ul-Menü, 
    positioniert.

    Die App wurde durch CSS-Anpassungen für verschiedene Endgeräte responsiv gestaltet.

    Es wurde ein erster Entwurf für einen Dark-Mode erstellt. Ebenfalls wurden Anpassungen 
    an das Auswahlmenü der Zutaten vorgenommen. Dabei sollen Zutaten mit der Tastatur ausgewählt werden.
    Zwar klappt dies, aber ist die Funktion noch mit Fehlern behaftet.



## Probleme und Lösungen

Während der Entwicklung traten Herausforderungen mit dem Sprachmodul auf, 
die als inkompatibel identifiziert wurden. 
Daraufhin wurde das Modul modular umgebaut. 
Alle Synchronisationen wurden korrekt angepasst und 
der Code ist jetzt auf dem neuesten Stand.

---

## Kommende Schritte

1. **Backend-Optimierungen**: Implementierung zusätzlicher Endpoints für das Bearbeiten und Löschen von Rezepten und Zutaten.
2. **Deployment**: Fertigstellung der Bereitstellung auf AWS, sowohl für das Backend als auch für die Datenbank.
3. **Weitere Features im Frontend**: Erweiterung des Frontends um zusätzliche Funktionen wie Rezeptbewertungen, Benutzerprofile und Favoriten.

---
